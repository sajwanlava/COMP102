#BlueJ class context
comment0.params=
comment0.target=void\ printAll()
comment0.text=\ Core\ 1\r\n\ Reads\ the\ class\ timetable\ file,\ printing\ out\ each\ line\ to\ the\ UI.\r\n\ This\ method\ is\ very\ straightforward,\ and\ there\ are\ very\ similar\r\n\ examples\ in\ the\ lecture\ notes.\r\n
comment1.params=targetCourse
comment1.target=void\ printCourse(java.lang.String)
comment1.text=\ Core\ 2\r\n\ Reads\ the\ class\ timetable\ file,\ printing\ out\ (to\ the\ UI\ window)\r\n\ the\ class\ type,\ day,\ start\ time,\ end\ time,\ and\ room\r\n\ for\ each\ class\ with\ the\ target\ course.\r\n\ Prints\ a\ message\ if\ there\ are\ no\ classes\ for\ the\ course.\r\n
comment10.params=
comment10.target=void\ doPrintInRoomsOnDay()
comment11.params=
comment11.target=void\ doBookingsFileForRoom()
comment12.params=
comment12.target=void\ doMeanClassLength()
comment13.params=
comment13.target=void\ doPotentialDisruptions()
comment14.params=
comment14.target=java.lang.String\ askDay()
comment14.text=Asks\ the\ user\ for\ a\ Day\ and\ returns\ as\ a\ capitalised\ three\ letter\ string
comment2.params=targetRoom
comment2.target=void\ printRoom(java.lang.String)
comment2.text=\ Core\ 3\r\n\ Prints\ out\ the\ name\ of\ the\ target\ room,\ and\ underlines\ it.\r\n\ Then\ reads\ the\ class\ timetable\ file,\ printing\ out\ (to\ the\ UI\ window)\r\n\ \ the\ course\ code,\ class\ type,\ day,\ start\ time,\ end\ time\r\n\ \ for\ each\ class\ in\ the\ target\ room.\r\n\ It\ will\ be\ best\ to\ read\ the\ six\ tokens\ on\ each\ line\ individually.\r\n
comment3.params=targetRoom1\ targetRoom2\ targetDay
comment3.target=void\ printInRoomsOnDay(java.lang.String,\ java.lang.String,\ java.lang.String)
comment3.text=\ Completion\ 1\r\n\ Prints\ a\ title\ containing\ its\ arguments,\ and\ then\r\n\ Reads\ the\ class\ timetable\ file,\ printing\ out\ (to\ the\ UI\ window)\r\n\ the\ course\ code,\ class\ type,\ day,\ start\ and\ end\ time\r\n\ for\ each\ class\ that\ is\ in\ targetRoom1\ or\ targetRoom2\ and\ is\ on\ targetDay\r\n\ It\ will\ be\ best\ to\ read\ the\ six\ tokens\ on\ each\ line\ individually.\r\n
comment4.params=targetRoom
comment4.target=void\ bookingsFileForRoom(java.lang.String)
comment4.text=\ Completion\ 2\r\n\ Writes\ a\ new\ file\ listing\ all\ the\ class\ bookings\ that\ are\ in\ a\ given\ room.\r\n\ \ The\ name\ of\ the\ new\ file\ should\ be\ the\ room,\ followed\ by\ "_Bookings.txt"\r\n\ \ The\ first\ line\ of\ the\ file\ should\ specify\ what\ room\ the\ bookings\ are\ for\:\r\n\ \ "Bookings\ for\ room\ <room\ name>"\r\n\ \ \r\n\ \ Each\ class\ booking\ should\ be\ formatted\ in\ three\ lines,\ with\ a\ blank\ line\ after.\r\n\ \ Course\:\ <Course\ Code>\r\n\ \ Time\:\ <Day>\ <Start\ Time>-<End\ Time>\r\n\ \ Session\:\ <Type>\r\n\r\n\ \ For\ example,\ if\ the\ targetRoom\ is\ VZ515,\ then\ the\ start\ of\ the\ file\ would\ be\ as\ follows\r\n\ \r\n\ \ Bookings\ for\ room\ VZ515\r\n\ \ ----------------------------------\r\n\ \ Course\:\ ACCY111\r\n\ \ Time\:\ Tue\ 1000-1050\r\n\ \ Session\:\ Tutorial\r\n\ \ \r\n\ \ Course\:\ ACCY130\r\n\ \ Time\:\ Thu\ 1310-1400\r\n\ \ Session\:\ Tutorial\r\n\ \ \r\n\ \ Course\:\ ACCY130\r\n\ \ Time\:\ Tue\ 1310-1400\r\n\ \ Session\:\ Tutorial\r\n\ \ \r\n
comment5.params=targetRoom
comment5.target=double\ meanClassLength(java.lang.String)
comment5.text=\ Challenge\r\n\ Computes\ and\ returns\ the\ average\ (mean)\ duration\ in\ minutes\ of\ all\ classes\ scheduled\r\n\ in\ a\ specified\ room.\r\n\ Hint\:\ be\ careful\ with\ the\ times\r\n\ Hint\:\ if\ there\ are\ no\ classes\ in\ the\ room,\ do\ not\ cause\ an\ error.\r\n
comment6.params=building\ targetDay\ targetStart\ targetEnd
comment6.target=void\ potentialDisruptions(java.lang.String,\ java.lang.String,\ int,\ int)
comment6.text=\ Challenge\r\n\ Lists\ all\ the\ courses\ (just\ the\ course\ code)\ that\ have\ classes\ in\ a\ given\ building\r\n\ on\ a\ given\ day\ such\ that\ any\ part\ of\ the\ class\ is\ between\ the\ given\ times.\r\n\ Each\ course\ involved\ should\ only\ be\ listed\ once,\ even\ if\ it\ has\ several\ classes\r\n\ in\ the\ building\ in\ the\ time\ period.\ \ Note,\ the\ data\ file\ is\ ordered\ by\ the\ course\ code.\r\n\ Note\ that\ this\ is\ similar,\ but\ not\ the\ same\ as,\ one\ of\ the\ completion\ questions.\r\n
comment7.params=
comment7.target=ClassTimes()
comment7.text=Constructor\:\ set\ up\ interface
comment8.params=
comment8.target=void\ doPrintCourse()
comment9.params=
comment9.target=void\ doPrintRoom()
numComments=15
