#BlueJ class context
comment0.params=
comment0.target=void\ doRead()
comment0.text=\ \r\n\ [CORE]\r\n\ Asks\ user\ for\ the\ file\ (using\ UIFileChooser.open()\ and\r\n\ creates\ an\ array\ stored\ in\ a\ field,\ then\ \r\n\ reads\ data\ from\ the\ file\ into\ the\ array\r\n\ Assumes\ all\ data\ values\ are\ positive\ integers.\ \r\n
comment1.params=
comment1.target=int\ minValue()
comment1.text=\r\n\ [CORE]\r\n\ Returns\ the\ smallest\ value\ in\ the\ data\ array.\ \r\n\ Assumes\ there\ is\ at\ least\ one\ value\ \r\n
comment10.params=
comment10.target=void\ doReportStats()
comment10.text=\r\n\ Computes\ and\ writes\ out\ the\ min,\ max,\ mean\ of\ the\ data.\r\n\ Appends\ the\ data\ to\ the\ textArea.\r\n
comment11.params=
comment11.target=void\ doChallengeStats()
comment11.text=\r\n\ Computes\ and\ writes\ out\ the\ standard\ deviation\ and\ median\ of\ the\ data.\r\n\ Appends\ the\ data\ to\ the\ textArea.\r\n
comment12.params=arguments
comment12.target=void\ main(java.lang.String[])
comment2.params=
comment2.target=int\ maxValue()
comment2.text=\r\n\ [CORE]\r\n\ Returns\ the\ largest\ value\ in\ the\ data\ array.\ \r\n\ Assumes\ there\ is\ at\ least\ one\ value\ \r\n
comment3.params=
comment3.target=double\ mean()
comment3.text=\r\n\ [CORE]\r\n\ Returns\ the\ mean\ of\ the\ values\ in\ the\ data\ array.\ \r\n\ Assumes\ there\ is\ at\ least\ one\ value\r\n
comment4.params=
comment4.target=void\ doPlotData()
comment4.text=\r\n\ CORE\r\n\ Plots\ a\ line\ graph\ of\ the\ data\r\n\ Assume\ all\ data\ values\ are\ positive\ and\ fewer\ than\ 500\ values.\r\n\ Draws\ the\ x\ and\ y\ axis,\r\n\ Plots\ a\ line\ graph\ of\ all\ the\ points\ with\ a\ blue\ line\ between\r\n\ \ each\ pair\ of\ adjacent\ points\r\n\ Uses\ the\ GRAPH_LEFT,\ GRAPH_TOP,\ etc\ fields\ for\ the\ dimensions\ and\ positions\ of\ the\ graph.\r\n
comment5.params=
comment5.target=void\ doHistogram()
comment5.text=\r\n\ COMPLETION\r\n\ Draw\ histogram\r\n\ Assumes\ all\ values\ are\ between\ 0\ and\ 450,\ and\r\n\ also\ that\ the\ count\ of\ any\ single\ value\ is\ less\ than\ 450.\r\n\ Plots\ a\ (green)\ vertical\ line\ for\ each\ possible\ value.\r\n\ Height\ of\ line\ is\ 5\ times\ the\ count\ of\ that\ value.\r\n\ Uses\ the\ arrayOfCounts\ method\ to\ construct\ the\ data\ for\ the\r\n\ histogram.\r\n
comment6.params=
comment6.target=int[]\ arrayOfCounts()
comment6.text=\r\n\ COMPLETION\r\n\ Constructs\ and\ returns\ an\ array\ of\ counts\ of\ each\ value.\r\n\ (the\ "count\ array")\r\n\ Assumes\ that\ all\ values\ are\ non-negative.\r\n\ The\ count\ array\ will\ have\ a\ count\ for\ each\ integer\ from\ 0\r\n\ to\ the\ maximum\ value\ in\ the\ data\r\n
comment7.params=
comment7.target=double\ standardDeviation()
comment7.text=\r\n\ CHALLENGE\r\n\ Returns\ the\ standard\ deviation\ of\ the\ values\ in\ the\ data\ array.\ \r\n\ Assumes\ there\ is\ at\ least\ one\ value\r\n
comment8.params=
comment8.target=double\ median()
comment8.text=\r\n\ CHALLENGE\r\n\ Returns\ the\ median\ value\ in\ the\ data\ array.\ \r\n\ Assumes\ there\ is\ at\ least\ one\ value\ \r\n
comment9.params=
comment9.target=Plotter()
comment9.text=\ Constructor\:\r\n\ Set\ up\ the\ five\ buttons\r\n
numComments=13
