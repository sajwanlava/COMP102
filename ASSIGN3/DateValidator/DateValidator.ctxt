#BlueJ class context
comment0.params=
comment0.target=void\ validateDateCore()
comment0.text=\r\n\ Asks\ user\ for\ a\ date,\ then\ determines\ whether\ the\ date\r\n\ \ \ \ specified\ by\ the\ three\ integers\ is\ a\ valid\ date.\r\n\ For\ the\ Core,\ you\ may\ assume\ that\r\n\ -\ All\ months\ have\ 31\ days,\ numbered\ 1\ to\ 31\r\n\ -\ The\ months\ run\ from\ 1\ to\ 12\r\n\ -\ Years\ start\ from\ 1900\ \r\n
comment1.params=
comment1.target=void\ validateDateCompletion()
comment1.text=\r\n\ Asks\ user\ for\ a\ date,\ then\ determines\ whether\ the\ date\r\n\ \ \ \ specified\ by\ the\ three\ integers\ is\ a\ valid\ date.\r\n\ For\ the\ Completion,\ you\ should\ also\ check\ that\r\n\ -\ Months\ have\ the\ correct\ number\ of\ days\r\n\ -\ On\ leap\ years\ February\ should\ have\ 29\ days.\r\n\ \ \ \ A\ year\ is\ a\ leap\ year\ if\:\r\n\ \ \ \ \ \ \ -\ The\ year\ can\ be\ evenly\ divided\ by\ 4\ but\ not\ 100\r\n\ \ \ \ \ \ \ -\ The\ year\ can\ be\ evenly\ divided\ by\ 400\ \r\n
comment2.params=
comment2.target=void\ validateDateChallenge()
comment2.text=\r\n\ For\ the\ challenge,\ your\ program\ should\ be\ extended\ to\ deal\ with\ the\ transition\ from\ the\ Julian\ to\ Gregorian\ calendar.\ \r\n\ The\ program\ should\ look\ at\ the\ date,\ determine\ whether\ this\ should\ be\ a\ Julian\ or\ Gregorian\ date,\ and\ test\ it\ appropriately.\ \r\n\ You\ will\ need\ to\ find\ the\ rules\ of\ the\ Julian\ calendar\ yourselves.\ \r\n\ \r\n
comment3.params=
comment3.target=DateValidator()
comment3.text=Constructor\:\ set\ up\ user\ interface
numComments=4
